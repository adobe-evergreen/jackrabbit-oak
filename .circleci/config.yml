# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
commands:
  benchmark_test:
    description: "An oak benchmark test"
    parameters:
      test:
        type: string
        default: "a"
    steps:
      - run: java -Xms256m -Xmx2048m -cp oak-benchmarks/target/oak-benchmarks-1.10-SNAPSHOT.jar org.apache.jackrabbit.oak.run.Main benchmark << parameters.test >> Oak-Segment-Tar
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
    resource_class: xlarge
    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: mvn install dependency:go-offline -DskipTests

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
        
      - run: pwd && ls

      # oak benchmark tests
      - benchmark_test:
          test: "BasicWriteTest" 
      - benchmark_test:  
          test: "LoginTest" 
      - benchmark_test:
          test: "LoginLogoutTest" 
      - benchmark_test:
          test:  "LoginGetRootLogoutTest" 
      - benchmark_test:
          test:  "NamespaceTest" 
      - benchmark_test:
          test: "NamespaceRegistryTest" 
      - benchmark_test:
          test: "ReadPropertyTest" 
      - benchmark_test:
          test: "GetNodeWithAdmin" 
      - benchmark_test:
          test: "GetNodeWithAnonymous" 
      - benchmark_test:
          test: "GetDeepNodeTest" 
      - benchmark_test:
          test: "SetPropertyTest" 
      - benchmark_test:
          test: "SetMultiPropertyTest" 
      - benchmark_test:
          test: "SmallFileReadTest" 
      - benchmark_test:
          test: "SmallFileWriteTest" 
      - benchmark_test:
          test: "ConcurrentReadTest" 
      - benchmark_test:
          test: "ConcurrentReadWriteTest" 
      - benchmark_test:
          test: "ConcurrentWriteReadTest" 
      - benchmark_test:
          test: "ConcurrentWriteTest" 
      - benchmark_test:
          test: "SimpleSearchTest" 
      - benchmark_test:
          test: "UUIDLookupTest" 
      - benchmark_test:
          test: "SQL2SearchTest" 
      - benchmark_test:
          test: "DescendantSearchTest" 
      - benchmark_test:
          test: "SQL2DescendantSearchTest" 
      - benchmark_test:
          test: "FlatTreeUpdateTest" 
      - benchmark_test:
          test: "CreateManyChildNodesTest" 
      - benchmark_test:
          test: "CreateManyNodesTest" 
      - benchmark_test:
          test: "UpdateManyChildNodesTest" 
      - benchmark_test:
          test: "TransientManyChildNodesTest" 
      - benchmark_test:
          test: "WikipediaImport" 
      - benchmark_test:
          test: "ManyNodes" 
      - benchmark_test:
          test: "ReadDeepTreeTest" 
      - benchmark_test:
          test: "ConcurrentReadDeepTreeTest" 
      - benchmark_test:
          test: "ConcurrentReadRandomNodeAndItsPropertiesTest" 
      - benchmark_test:
          test: "ConcurrentTraversalTest" 
      - benchmark_test:
          test: "ConcurrentCreateNodesTest" 
      - benchmark_test:
          test: "SequentialCreateNodesTest" 
      - benchmark_test:
          test: "ConcurrentFileWriteTest" 


